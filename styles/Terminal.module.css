.terminal {
  /* use the theme's article/editor background to match file background and keep opaque */
  background: var(--article-bg, var(--tabs-bg, #121218));
  color: var(--text-color, #ffffff);
  border-top: 1px solid rgba(255, 255, 255, 0.04);
  padding: 0.25rem 0.5rem 0.5rem 0.5rem;
  box-shadow: 0 -8px 30px rgba(0, 0, 0, 0.35);
  display: flex;
  flex-direction: column;
  /* absolute inside editor so it overlays content instead of growing page */
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  z-index: 20;
}

.open {
  display: flex;
}

.closed {
  display: none;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 0.5rem;
  position: relative; /* anchor resizer strip so it sits at the top edge only */
}

.resizer {
  width: 100%;
  height: 8px; /* small grab area */
  cursor: ns-resize;
  position: absolute;
  top: 0;
  left: 0;
}

.title {
  font-weight: 700;
  color: var(--text-color, #ffffff);
  text-transform: uppercase;
}

/* Use the same sans UI font used in the site header for a thinner, UI-like look */
.title {
  font-family: 'Source Sans Pro', system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
  font-weight: 600;
  letter-spacing: 0.6px;
  font-size: 13px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.title svg {
  margin-right: 4px; /* extra safety spacing for older icon renders */
}

.actions button {
  background: transparent;
  border: none;
  color: var(--muted);
  font-size: 18px;
  cursor: pointer;
}

.instances {
  display: flex;
  gap: 6px;
  align-items: center;
}

.instanceTab {
  background: transparent;
  border: 1px solid rgba(255,255,255,0.04);
  color: var(--muted);
  padding: 4px 8px;
  border-radius: 4px;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: 6px;
}

.instanceTab[aria-pressed="true"] {
  background: var(--tab-active-bg);
  color: var(--foreground);
}

.instanceClose {
  margin-left: 6px;
  font-weight: 600;
  color: rgba(255,255,255,0.5);
}

.addInstance {
  background: transparent;
  border: 1px dashed rgba(255,255,255,0.06);
  color: var(--muted);
  padding: 4px 8px;
  border-radius: 4px;
  cursor: pointer;
}

.addInstance[disabled] {
  opacity: 0.4;
  cursor: not-allowed;
}

.output {
  overflow-y: auto;
  padding: 0.5rem;
  font-family: monospace;
  font-size: 13px;
}

/* Terminal scrollbar â€” thin, theme-aware colors, rounded thumb */
.output::-webkit-scrollbar {
  width: 8px;
}

.output::-webkit-scrollbar-track {
  background: var(--scrollbar-track-bg, rgba(0,0,0,0.15));
}

.output::-webkit-scrollbar-thumb {
  background: var(--accent-color, #888);
  border-radius: 6px;
  border: 2px solid transparent;
  background-clip: padding-box;
  box-shadow: inset 0 0 0 1px rgba(0,0,0,0.15);
}

.output::-webkit-scrollbar-thumb:hover {
  filter: brightness(0.95);
}

.output {
  scrollbar-width: thin;
  scrollbar-color: var(--accent-color) var(--scrollbar-track-bg);
}

.line {
  padding: 2px 0;
}

.inputRow {
  display: flex;
  align-items: center;
  padding: 0.5rem;
  border-top: 1px solid rgba(255, 255, 255, 0.02);
}

.prompt {
  margin-right: 0.5rem;
}

.input {
  background: transparent;
  border: none;
  color: var(--text-color, #ffffff);
  outline: none;
  flex: 1;
  font-family: monospace;
  font-size: 13px;
  padding-left: 0;
  margin: 0;
  caret-color: var(--text-color, #ffffff);
}

.line { color: var(--text-color, #ffffff); }

/* input wrapper for custom caret */
.inputWrapper {
  position: relative;
  width: 100%;
}

.inputMirror {
  position: absolute;
  visibility: hidden;
  white-space: pre;
  font-family: monospace;
  font-size: 13px;
  padding-left: 2px;
}

/* hide native caret by making input caret transparent, keep selection visible */
.blockCursor {
  display: none; /* hide custom block cursor: use native caret for reliability */
}

.blockCursor {
  position: absolute;
  top: 8px; /* aligns visually with input text baseline */
  width: 10px;
  background: #fff; /* white block cursor */
  animation: blink 1s steps(2, start) infinite;
  pointer-events: none;
}

@keyframes blink {
  50% { opacity: 0; }
}
